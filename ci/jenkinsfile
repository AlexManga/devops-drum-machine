pipeline{
    agent any  
    tools {
        nodejs 'NodeJS11' 
    }
    stages{
        stage("Build"){
            steps{
                chuckNorris()
                sh label: 'Npm install and build', script: 'npm install && npm run-script build'
                sh label: 'Run tests', script: 'npm test'
                stash includes: 'public/**/*', name: 'build'
            }
            post{
                always{
                    echo "========always========"
                    junit '**/TESTS-PhantomJS*'
                }
                success{
                    echo "========Build executed successfully========"
                }
                failure{
                    echo "========Build execution failed========"
                }
            }
        }
        stage("Deploy"){
            steps{
                unstash 'build'
                sshPublisher(publishers: [sshPublisherDesc(configName: 'docker-nginx', transfers: [sshTransfer(cleanRemote: false, excludes: '', execCommand: '', execTimeout: 120000, flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+', remoteDirectory: '/', remoteDirectorySDF: false, removePrefix: 'public', sourceFiles: 'public/**/*')], usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: false)])
                echo "========executing A========"
            }
            post{
                always{
                    echo "========always========"
                }
                success{
                    echo "========A executed successfully========"
                }
                failure{
                    echo "========A execution failed========"
                }
            }
        }
    }
    post{
        always{
            echo "========always========"
        }
        success{
            echo "========pipeline executed successfully ========"
        }
        failure{
            echo "========pipeline execution failed========"
        }
    }
}